

// knowledge source definition
ks1.type = "OWL File"
ks1.url = "http://dbpedia.org/sparql"
ks1.defaultGraphURIs= {"http://dbpedia.org"}
ks1.sparql = " 
Construct { 	
	?s1 ?p1 ?o1. 
	?o1 ?p2 ?o2 .  	
	?p1 a owl:ObjectProperty . 	
	?p2 a owl:ObjectProperty . 
	?s1 a owl:Thing . 
	?o1 a owl:Thing . 
	?o2 a owl:Thing . 
}  { 	
	?s1 ?p1 ?o1. 	
	OPTIONAL{ ?o1 ?p2 ?o2.} .	
	Filter (! (?p1 IN (rdf:type , <http://purl.org/dc/terms/subject>, owl:sameAs, <http://dbpedia.org/ontology/wikiPageExternalLink>, <http://dbpedia.org/ontology/thumbnail>,  <http://dbpedia.org/property/website>, <http://xmlns.com/foaf/0.1/homepage> ,<http://xmlns.com/foaf/0.1/depiction>, <http://xmlns.com/foaf/0.1/page> ) )) .			
	Filter (! (?p1 IN (rdf:type , <http://purl.org/dc/terms/subject>, owl:sameAs, <http://dbpedia.org/ontology/wikiPageExternalLink>, <http://dbpedia.org/ontology/thumbnail>,  <http://dbpedia.org/property/website>, <http://xmlns.com/foaf/0.1/homepage> ,<http://xmlns.com/foaf/0.1/depiction>, <http://xmlns.com/foaf/0.1/page> ) )) .			Filter (!isLiteral(?o1) && !isLiteral(?o2) ) . 
	Filter ( ?s1 IN (<http://dbpedia.org/resource/London> , <http://dbpedia.org/resource/Berlin>)) . 
} "


ks2.type = "OWL File"
ks2.url = "http://dbpedia.org/sparql"
ks2.defaultGraphURIs= {"http://dbpedia.org"}
ks2.sparql = "Construct { 
	?s a ?class . 
	?s a owl:Thing . 
	?class a owl:Class . 
	?class rdfs:subClassOf ?super . 
	?super a owl:Class . 
}   { 
	?s a ?class . 
	OPTIONAL  { ?class rdfs:subClassOf ?super . } . 
	Filter ( ?s IN (<http://dbpedia.org/resource/London> , <http://dbpedia.org/resource/Berlin>)) . 
	Filter (  ?class LIKE <http://dbpedia.org/ontology/%>  ) . 
}  "

ks3.type = "OWL File"
ks3.url = "http://dbpedia.org/sparql"
ks3.defaultGraphURIs= {"http://dbpedia.org"}
ks3.sparql = "Construct { 
	?o a ?class . 
	?o a owl:Thing . 
	?class a owl:Class . 
	?class rdfs:subClassOf ?super .
	?super a owl:Class . 
}   { 
	?s ?p ?o . 
	?o a ?class . 
	OPTIONAL  { ?class rdfs:subClassOf ?super . } . 
	Filter ( ?s IN (<http://dbpedia.org/resource/London> , <http://dbpedia.org/resource/Berlin>)) . 
	Filter (  ?class LIKE <http://dbpedia.org/ontology/%>  ) . 
}  "

ks4.type = "OWL File"
ks4.url = "http://dbpedia.org/sparql"
ks4.defaultGraphURIs= {"http://dbpedia.org"}
ks4.sparql = "Construct { 
	?o a ?class . 
	?o a owl:Thing . 
	?class a owl:Class . 
	?class rdfs:subClassOf ?super . 
	?super a owl:Class . 
}   { 
	?s ?p1 ?o1 . 
	?o1 ?p2 ?o . 
	?o a ?class . 
	OPTIONAL  { ?class rdfs:subClassOf ?super . } . 
	Filter ( ?s IN (<http://dbpedia.org/resource/London> , <http://dbpedia.org/resource/Berlin>)) . 
	Filter (  ?class LIKE <http://dbpedia.org/ontology/%>  ) .
}  "

reasoner.type = "closed world reasoner"
reasoner.sources = {ks1, ks2, ks3, ks4 }

lp.type = "posNegStandard"
lp.positiveExamples = {"http://dbpedia.org/resource/Berlin"}
lp.negativeExamples = {"http://dbpedia.org/resource/London"} 

// create a refinement operator and configure it
op.type = "rho"
op.useNegation = false
op.useAllConstructor = false
op.useCardinalityRestrictions = false
op.reasoner = reasoner

// we use the OCEL algorithm
alg.type = "ocel"
alg.operator = op

alg.maxExecutionTimeInSeconds = 20
//alg.terminateOnNoiseReached = false
alg.noisePercentage = 5
