 * support for OWL API 3, ORE tool based on DL-Learner algorithms (soon to be migrated to an own project), implemented several new heuristics, e.g. generalised F-Measure, stochastic approximation of computing F-Measure, learning algorithms for the EL description logic, support for hasValue construct in combination with string datatype, support for refining existing definitions (instead of learning from scratch) for CELOE ontology engineering algorithm, increased number of unit tests (now 40), support for direct Pellet 2 integration and reasoners connected via OWLLink, 24 bugs fixed and 12 feature requests implemented at sourceforge.net bug tracker     
release distribution=staging, date=20:13 07.08.2010,version=1.0,urgency=low,by=Jens Lehmann <lehmann@informatik.uni-leipzig.de>
 * new algorithm: CELOE (class expression learning for ontology engineering), an efficient refinement operator for the EL description logic, fast stochastic class expression coverage estimation included, reasoner component design and learning problem structure improved, more learning examples provided and unit tests for ensuring code quality extended, 6 bugs and feature requests reported at the sourceforge.net tracker fixed
release distribution=staging, date=20:13 06.05.2009,version=0.9,urgency=low,by=Jens Lehmann <lehmann@informatik.uni-leipzig.de>
 * improved refinement operator based learning approach taking domain/range of properties, property hierarchies, disjoint classes into account to structure search space more efficiently, fast instance checking algorithm reduces the time to test example coverage of class descriptions significantly, more learning examples provided in release, 12 bugs and 10 feature requests reported at the sourceforge.net tracker fixed
release distribution=staging, date=20:13 13.10.2008,version=0.8,urgency=low,by=Jens Lehmann <lehmann@informatik.uni-leipzig.de>
 * Flexible new component based structure: 4 types of components: knowledge sources, reasoners, learning problems, learning algorithms, easily extensible: to implement a new component of one of the above types you only have to extend the corresponding class in org.dllearner.core and add the name of your class to the components.ini file,  each component can maintain and easily extend its own configuration options, Support for using SPARQL endpoints as background knowledge, including mechanisms for knowledge fragment selection. This feature enables DL-Learner to use DBpedia as background knowledge,Preliminary support for learning from only positive examples and learning of inclusion axioms instead of definitions, Support for N-Triple files, Support for using role hierarchies in the refinement operator based algorithm, Much more powerful web service interface allowing to access and modify all DL-Learner components, Reasoners:preliminary OWL API reasoner interface support: Pellet, FaCT++,  KAON2 dropped, such that DL-Learner now depends solely on open source libraries, A Prolog parser, which can help in converting Prolog files to OWL (thereby transfering ILP problems into OWL learning problems),  
release distribution=staging, date=20:13 18.02.2008,version=0.7,urgency=low,by=Jens Lehmann <lehmann@informatik.uni-leipzig.de>
 * initial release
release distribution=staging, date=20:13 31.08.2007,version=0.6,urgency=low,by=Jens Lehmann <lehmann@informatik.uni-leipzig.de>
