<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.dllearner</groupId>
	<artifactId>dllearner-parent</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>DL Learner Parent Pom</name>
	<url>http://aksw.org/Projects/DLLearner</url>
	<properties>
		<!-- tell the compiler we can use 1.6 -->
		<compiler.version>1.6</compiler.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- convenience to define GWT version in one place -->
		<gwt.version>2.3.0</gwt.version>

		<!--Define the AKSW dependency version -->
		<aksw.version>0.2-SNAPSHOT</aksw.version>

        <slf4j.version>1.6.4</slf4j.version>
        <log4j.version>1.2.16</log4j.version>
	</properties>

	<modules>
		<module>components-core</module>
		<module>components-ext</module>
		<module>interfaces</module>
		<module>scripts</module>
		<module>protege</module>
		<module>evalplugin</module>
  </modules>


	<!--This is the SCM information, which needs to be here so we can use the
		maven release plugin -->
	<scm>
		<connection>scm:svn:https://dl-learner.svn.sourceforge.net/svnroot/dl-learner/trunk</connection>
		<developerConnection>scm:svn:https://dl-learner.svn.sourceforge.net/svnroot/dl-learner/trunk
        </developerConnection>
		<url>https://dl-learner.svn.sourceforge.net/svnroot/dl-learner/trunk</url>
	</scm>

	<build>
		<!-- - Plugin Management defines the plugins that the child components
			can use - It's good practice to do this as we can ensure all children use
			common versions - of the plugins, and we can look in one place to see all
			plugin dependencies. -->
		<pluginManagement>
			<plugins>
				<!--Surefire - for JUnits -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.4.3</version>
				</plugin>
				<!--Maven Compiler Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.0.2</version>
					<configuration>
						<!--We use 1.6 -->
						<source>${compiler.version}</source>
						<target>${compiler.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>

				<!-- - Maven Jar Plugin - if you want to create and/or sign jars. - I'm
					putting this in so we can create a jar for the test classes - in components
					core so that other components' tests can leverage them -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>
				<!--JAR the Sources -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
				</plugin>
                <plugin>
                    <groupId>com.mycila.maven-license-plugin</groupId>
                    <artifactId>maven-license-plugin</artifactId>
                    <version>1.9.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>tomcat-maven-plugin</artifactId>
                    <version>1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>maven-jetty-plugin</artifactId>
                    <version>6.1.26</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencyManagement>
		<!-- - Dependency Management defines the dependencies at the parent level
			- These set the dependencies on a global level and the children are forced
			to use the defined version - We do this to ensure consistent dependencies
			amongst all children artifacts that are generated by this pom. - - Children
			still have to include the dependency, but only the groupId and artifactId
			as version is retrieved from the parent. - - Remember, default scope is compile
			in Maven. -->
		<dependencies>
			<dependency>
				<groupId>net.sourceforge.owlapi</groupId>
				<artifactId>owlapi</artifactId>
				<version>3.2.4</version>
			</dependency>

			<dependency>
				<groupId>com.owldl</groupId>
				<artifactId>pellet</artifactId>
				<version>2.3.0</version>
                <exclusions>
                    <!--Excluding this because it has the same classpath as the new Apache Jena and can cause problems-->
                    <exclusion>
                        <groupId>com.hp.hpl.jena</groupId>
                        <artifactId>jena</artifactId>
                    </exclusion>
                </exclusions>
			</dependency>

			<dependency>
				<groupId>org.semanticweb.hermit</groupId>
				<artifactId>hermit</artifactId>
				<version>1.3.3</version>
			</dependency>

            <!-- SOLR Dependency -->
            <dependency>
                <groupId>org.apache.solr</groupId>
                <artifactId>solr-core</artifactId>
                <version>3.5.0</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-jdk14</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

			<!-- 
            <dependency>
                <groupId>org.nlp2rdf</groupId>
                <artifactId>nif</artifactId>
                <version>1.1-SNAPSHOT</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
             -->

			<!--Available via central, we use the latest with minor mods to DL Learner
				source (IE Dig related code) -->
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-core</artifactId>
				<version>2.7.3</version>
			</dependency>
			<!--SwingX is in central -->
			<dependency>
				<groupId>org.swinglabs</groupId>
				<artifactId>swingx</artifactId>
				<version>1.6</version>
			</dependency>

			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>20090211</version>
			</dependency>

			<!--Used in NKE interfaces for now -->
			<dependency>
				<groupId>com.googlecode.json-simple</groupId>
				<artifactId>json-simple</artifactId>
				<version>1.1</version>
			</dependency>

			<dependency>
				<groupId>net.sf.jopt-simple</groupId>
				<artifactId>jopt-simple</artifactId>
				<version>3.3</version>
				<!--This version is the one released with DL-Learner 2048 -->
			</dependency>

			<!--Lucene is in Central -->
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-core</artifactId>
				<version>3.5.0</version>
			</dependency>

			<dependency>
				<groupId>org.ini4j</groupId>
				<artifactId>ini4j</artifactId>
				<version>0.5.2</version>
				<!--This version is the one released with DL-Learner 2048 -->
			</dependency>


            <dependency>
                <groupId>org.apache.xmlbeans</groupId>
                <artifactId>xmlbeans</artifactId>
                <version>2.4.0</version>
            </dependency>

			<dependency>
				<groupId>com.jamonapi</groupId>
				<artifactId>jamon</artifactId>
				<version>2.7</version>
			</dependency>


			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-arq</artifactId>
				<version>2.9.3</version>
			</dependency>

			<!--Junits -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.8.1</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.google.code.factplusplus</groupId>
				<artifactId>factpp-owlapi</artifactId>
				<version>1.5.1</version>
			</dependency>

			<dependency>
				<groupId>net.sourceforge.owlapi.owllink</groupId>
				<artifactId>owllink</artifactId>
				<version>1.1.0</version>
			</dependency>

			<dependency>
				<groupId>org.protege.editor.core</groupId>
				<artifactId>org.protege.editor.core.application</artifactId>
				<version>4.2</version>
			</dependency>

			<dependency>
				<groupId>org.protege.editor.owl</groupId>
				<artifactId>org.protege.editor.owl</artifactId>
				<version>4.2</version>
			</dependency>

			<!--Dependencies that are generated as part of this parent pom -->
			<dependency>
				<groupId>org.dllearner</groupId>
				<artifactId>components-core</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!--This is the jar of the tests from components-core -->
			<dependency>
				<groupId>org.dllearner</groupId>
				<artifactId>components-core</artifactId>
				<version>${project.version}</version>
				<classifier>tests</classifier>
			</dependency>

			<dependency>
				<groupId>org.dllearner</groupId>
				<artifactId>components-ext</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.dllearner</groupId>
				<artifactId>interfaces</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.dllearner</groupId>
				<artifactId>protege</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.aksw.commons</groupId>
				<artifactId>sparql</artifactId>
				<version>${aksw.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aksw.commons</groupId>
				<artifactId>model</artifactId>
				<version>${aksw.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aksw.commons</groupId>
				<artifactId>collections</artifactId>
				<version>${aksw.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aksw.commons</groupId>
				<artifactId>util</artifactId>
				<version>${aksw.version}</version>
			</dependency>

			<dependency>
				<groupId>net.sourceforge.secondstring</groupId>
				<artifactId>secondstring</artifactId>
				<version>20060615</version>
			</dependency>

			<dependency>
				<groupId>com.jgoodies</groupId>
				<artifactId>looks</artifactId>
				<version>2.2.2</version>
			</dependency>

			<dependency>
				<groupId>net.sourceforge.browserlauncher2</groupId>
				<artifactId>browserlauncher2</artifactId>
				<version>1.3</version>
			</dependency>

			<dependency>
				<groupId>net.sourceforge.dig</groupId>
				<artifactId>dig-xmlbeans</artifactId>
				<version>1.1</version>
			</dependency>

			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.2.143</version>
			</dependency>

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.13</version>
			</dependency>

			<!--GWT Dependencies -->
			<dependency>
				<groupId>postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>8.4-701.jdbc4</version>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>r07</version>
			</dependency>
			<dependency>
				<groupId>com.dumontierlab</groupId>
				<artifactId>pdb2rdf-parser</artifactId>
				<version>0.0.8</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <!--This pom is including a modified version of Jena that is out of sync with what we're using-->
                    <exclusion>
                        <groupId>com.hp.hpl.jena</groupId>
                        <artifactId>jena</artifactId>
                    </exclusion>
                </exclusions>
			</dependency>
			<dependency>
				<groupId>com.dumontierlab</groupId>
				<artifactId>pdb2rdf-cli</artifactId>
				<version>0.0.9</version>
			</dependency>

			<!--used in the webservice in interfaces -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.4</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jsp-api</artifactId>
				<version>2.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>1.0.3</version>
				<scope>provided</scope>
			</dependency>

			<!-- Spring -->
	        <dependency>
	        	<groupId>org.springframework</groupId>
	        	<artifactId>spring-context</artifactId>
	        	<version>3.1.1.RELEASE</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
	        </dependency>
			<dependency>
	        	<groupId>org.springframework</groupId>
	        	<artifactId>spring-beans</artifactId>
	        	<version>3.1.1.RELEASE</version>
	        </dependency>

            <!--BEGIN Logging Dependencies-->

            <!--This is the api jar, it's needed at compile time-->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!--This is the bridge that ties calls to the slf4j api to the log4j framework.  This is a runtime dependency for programs which wish to use log4j as their implementation.-->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- This is the concrete implementation of the log4j framework - it is a runtime dependency that needs to be used with the slf4j-log4j12 dependency -->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <!--Bridge from JCL to SLF4J.  Then we go from SLF4J to our desired logging framework (which for DL-Learner interfaces is Log4J).
             - JCL is in use by Spring and so this lets us control the output from the Spring libraries in the same way we control anything else.
             - This is also a runtime dependency.
             -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!--END Logging Dependencies-->

            <!--It seems that later versions of this causes a lot of problems for some of the libraries we depend on-->
            <dependency>
                <groupId>xerces</groupId>
                <artifactId>xercesImpl</artifactId>
                <version>2.6.0</version>
            </dependency>

            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.6</version>
            </dependency>

        </dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>maven.aksw.internal</id>
			<name>University Leipzig, AKSW Maven2 Repository</name>
			<url>http://maven.aksw.org/archiva/repository/internal</url>
            <releases/>
		</repository>
		<repository>
			<id>maven.aksw.snapshots</id>
			<name>University Leipzig, AKSW Maven2 Repository</name>
			<url>http://maven.aksw.org/archiva/repository/snapshots</url>
            <snapshots/>
		</repository>
		<repository>
			<id>elk.reasoner</id>
			<name>ELK Reasoner Repository</name>
			<url>http://elk-reasoner.googlecode.com/svn/m2/releases</url>
            <releases/>
		</repository>
		<repository>
  			<id>apache-repo-releases</id>
  			<url>https://repository.apache.org/content/repositories/releases/</url>
  			<releases><enabled>true</enabled></releases>
			</repository>		
	</repositories>
	<distributionManagement>
		<repository>
			<id>archiva.internal</id>
			<name>AKSW Internal Release Repository</name>
			<url>http://maven.aksw.org/archiva/repository/internal</url>
		</repository>
		<snapshotRepository>
			<id>archiva.snapshots</id>
			<name>AKSW Snapshot Repository</name>
			<url>http://maven.aksw.org/archiva/repository/snapshots</url>
		</snapshotRepository>
	</distributionManagement>


	<profiles>
		<profile>
			<id>hudson_build</id>
			<build>
				<plugins>
					<!--JAR the Sources -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
                                <id>attach-sources</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
