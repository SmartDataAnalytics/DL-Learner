// declare some prefixes to use as abbreviations
prefixes = [ ("ex","http://www.benchmark.org/family#") ]

// knowledge source definition
ks.type = "OWL File"
ks.fileName = "family-benchmark.owl"

// reasoner
reasoner.type = "fast instance checker"
reasoner.sources = { ks }

// CELOE
/*
alg.type = "celoe"
alg.terminateOnNoiseReached = true
*/

// OCEL
alg.type = "ocel"

// ELTL
// alg.type = "eltl"

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = { 
"ex:F1F5"
,"ex:F1F7"
,"ex:F2F17"
,"ex:F2F15"
,"ex:F2F33"
,"ex:F2F30"
,"ex:F2F38"
,"ex:F3F49"
,"ex:F3F52"
,"ex:F3F53"
,"ex:F4F58"
,"ex:F6F79"
,"ex:F6F83"
,"ex:F6F86"
,"ex:F6F89"
,"ex:F6F87"
,"ex:F6F96"
,"ex:F6F97"
,"ex:F6F94"
,"ex:F7F108"
,"ex:F7F106"
,"ex:F7F118"
,"ex:F7F119"
,"ex:F7F129"
,"ex:F7F127"
,"ex:F7F121"
,"ex:F9F145"
,"ex:F9F148"
,"ex:F9F150"
,"ex:F9F143"
,"ex:F9F164"
,"ex:F9F169"
,"ex:F10F175"
,"ex:F10F177"
,"ex:F10F192"
,"ex:F10F193"
,"ex:F10F201"
}

lp.negativeExamples = {
"ex:F10F195"
,"ex:F2M37"
,"ex:F2M16"
,"ex:F7M123"
,"ex:F5M60"
,"ex:F9F152"
,"ex:F2M13"
,"ex:F9M147"
,"ex:F6F77"
,"ex:F2F14"
,"ex:F2F19"
,"ex:F2F22"
,"ex:F6F84"
,"ex:F5F65"
,"ex:F9M162"
,"ex:F7M122"
,"ex:F7M130"
,"ex:F10M196"
,"ex:F2M35"
,"ex:F6M88"
,"ex:F6F74"
,"ex:F9F163"
,"ex:F7F126"
,"ex:F9M157"
,"ex:F10M202"
,"ex:F10M188"
,"ex:F9M155"
,"ex:F10M183"
,"ex:F7M112"
,"ex:F10F185"
,"ex:F8M136"
,"ex:F7M102"
,"ex:F3F46"
,"ex:F7M131"
,"ex:F9M149"
,"ex:F5M68"
,"ex:F4M57"
}