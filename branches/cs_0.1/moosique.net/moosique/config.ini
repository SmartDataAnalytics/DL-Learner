; Config file for moosique.net
; Use this values to config your installation of DL-Learner and the
; usage of the webapplication moosqiue.net

[general]
; Activates global debugging, using FirePHP and Firebug
debug = true
; If globalLimit = true maxResults is used for a global SPARQL-Query LIMIT, 
; if set to false maxResults will only be used for viewing results
; PLEASE NOTE: global limiting to e.g. 20 may show only one result, because
; one result can have >20 tags, and this counts as total-limit
globalLimit = false
; setting this to 0 disables result-limitation for everything
; recommendation results and last-fm search always use this value
; it is highly recommended to not set this value to sth. btw. 10 and 100
; depending on how much results you want to show the user and how 
; fast you want them do display in the frontend
maxResults  = 20
; this should always be true, else the results are always the same (first ones)
randomize = true
; %-score a recommendation-result needs to have to be recommended
threshold = 80
; de/avtivate caching of sparql-queries, active = true = default
; this is mainly used for endpoint-performance testing, dont deactivate
; this in a live enviroment, searching and learning will be sloooow
useCache = true
; this is used for crappy mac osx java implementation. set to true
; if you have problems with the learning process and get soap-errors
javaProblems = false


[url]
; the url the webapplication is running under
base        = "http://moosique.net/"
; the absolute path on your system, this is needed for the owl-file
absPath     = "/var/www/moosique/dllearner/src/moosique.net/"
; this is where the dl-learner webservice will be reachable, don't
; change this value, if you are using a default installation of the ws
wsdl        = "http://localhost:8181/services?wsdl"
; this is where the knowledge comes from, DBTune ftw!
jamendo     = "http://dbtune.org/jamendo/sparql/"
; You can use a local sparql-endpoint too, of course.
; jamendo     = "http://localhost:8890/sparql/"
; using relative paths for the next values,
; abspath or base-path are added automatically
; the wdsl-file for the soap-connection, default
wsdlLocal   = "moosique/main.wsdl"
; this is where the random instances are gathered from
allRecords  = "moosique/data/allRecordsWithTags.txt"
; the ontology of tags
tagOntology = "moosique.owl"


[lastFM]
; change the api-key if you have your own
apiKey = "b9877a7391416d0846ad5f240a1838f9"
; some urls for data retrieval from the last-fm api
topTagsUrl = "http://ws.audioscrobbler.com/2.0/?method=user.gettoptags"
topArtistsUrl = "http://ws.audioscrobbler.com/2.0/?method=user.gettopartists"
artistsTopTagsUrl = "http://ws.audioscrobbler.com/2.0/?method=artist.gettoptags"
artistInfoUrl = "http://ws.audioscrobbler.com/2.0/?method=artist.getinfo"
; number of tags we fetch results for
topTags = 5
; if the user has no tags, number of artists to fetch tags for
topArtists = 10


; you don't have to change [learning]-config-vars in most cases
[learning]
; the learning problem here ist positive examples only
problem = "posOnlyLP"
; here we define the used learning algorithm, celoe ist the best
; one, you could also use bruteForce or Random for posOnlyLP
algorithm = "celoe"
; 2-5 seconds seem to be the optimum, depending on server speed
; for more than 5 seconds, the algorithm does not give any better
; results, thus higher than 5 seconds ist not needed in most cases
maxExecutionTimeInSeconds = 3
useHasValueConstructor = true
valueFrequencyThreshold = 2
; using the default dl-learner reasoner, faster than the others (fact, pellet)
reasoner = "fastInstanceChecker"
recursionDepth = 1
; save the owl in the cache-library
saveExtractedFragment = true
; the number of random instances to add to the posExamples
; 3-5 will give the best results
instances = 4
; excluding predicates from sparql-extraction for faster learning, 
; with prefixes - comma-seperated list
; exclude = "mo:image,mo:available_as,mo:track,serql:directType,dc:title"
exclude = ""


; you don't have to change the prefixes in most cases, but you can of course add some
; all used prefixes are already here, some used concepts from jamendo/dbtune are also
; defined here, but since they are not used in the sparql queries, they are commented out
[prefix]
dc      = "http://purl.org/dc/elements/1.1/"
foaf    = "http://xmlns.com/foaf/0.1/"
geo     = "http://www.geonames.org/ontology#"
mo      = "http://purl.org/ontology/mo/"
owl     = "http://www.w3.org/2002/07/owl#"
rdf     = "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
rdfs    = "http://www.w3.org/2000/01/rdf-schema#"
tags    = "http://www.holygoat.co.uk/owl/redwood/0.1/tags/"
xsd     = "http://www.w3.org/2001/XMLSchema#"
;bio     = "http://purl.org/vocab/bio/0.1/"
;db      = "http://dbtune.org/musicbrainz/resource/"
;rel     = "http://purl.org/vocab/relationship/"
;mbz     = "http://purl.org/ontology/mbz#"
;event   = "http://purl.org/NET/c4dm/event.owl#"
;serql   = "http://www.openrdf.org/schema/serql#"
