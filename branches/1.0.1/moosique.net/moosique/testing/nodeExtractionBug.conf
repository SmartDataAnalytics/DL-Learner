/*
This is a conf-File to demonstrate a Bug:

If there is a instance or posExample which contains an invalid URL, e.g.

RDF-Dump-Excerpt of the record http://dbtune.org/jamendo/record/5359 
====================================================================
<rdf:Description rdf:about="http://dbtune.org/jamendo/artist/152">
<foaf:made rdf:resource="http://dbtune.org/jamendo/record/5359"/>
</rdf:Description>

RDF-Dump-Excerpt of related artist http://dbtune.org/jamendo/artist/152
=======================================================================
<mo:MusicArtist rdf:about="http://dbtune.org/jamendo/artist/152">
<serql:directType rdf:resource="http://purl.org/ontology/mo/MusicArtist"/>
<rdf:type rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
<foaf:based_near rdf:resource="http://sws.geonames.org/2991879/"/>
<foaf:homepage rdf:resource="http://myspace.com/fishbonerocket%20%20%20%2C%20%20http://www.fishbonerocket.com"/>

with foaf:homepage being an invalid URL:
http://myspace.com/fishbonerocket%20%20%20%2C%20%20http://www.fishbonerocket.com
--> http://myspace.com/fishbonerocket   ,  http://www.fishbonerocket.com

the recursion expanding the notes throws an error 500:

"Getting classes for remaining instances: 51 instances
ignoring (see log for details): Exception caught in SPARQLTasks, 
passing emtpy result: rethrew: HttpException: 500 Internal Server Error"

Details:
***********
New Query:
wget -S -O - '
http://dbtune.org/jamendo/sparql/?query=
SELECT * WHERE { <http://myspace.com/fishbonerocket   ,  http://www.fishbonerocket.com> ?predicate ?object;a ?object .   }
ERROR: HTTPException occured: HttpException: HttpException: 500 Internal Server Error: rethrew: HttpException: 500 Internal Server Error

and this will finally result in an:

java.lang.IllegalArgumentException
	at java.net.URI.create(URI.java:842)
	at org.dllearner.kb.extraction.Node.getURI(Node.java:99)
	at org.dllearner.kb.extraction.InstanceNode.toOWLOntology(InstanceNode.java:183)
	at org.dllearner.kb.extraction.InstanceNode.toOWLOntology(InstanceNode.java:192)
	at org.dllearner.kb.extraction.Manager.getOWLAPIOntologyForNodes(Manager.java:107)
	at org.dllearner.kb.sparql.SparqlKnowledgeSource.init(SparqlKnowledgeSource.java:302)
	.....
	Caused by: java.net.URISyntaxException: Illegal character in path at index 33: http://myspace.com/fishbonerocket   ,  http://www.fishbonerocket.com
	at java.net.URI$Parser.fail(URI.java:2809)
	at java.net.URI$Parser.checkChars(URI.java:2982)
	at java.net.URI$Parser.parseHierarchical(URI.java:3066)
	at java.net.URI$Parser.parse(URI.java:3014)
	at java.net.URI.<init>(URI.java:578)
	at java.net.URI.create(URI.java:840)
	
not returning any results. 

The best solution would be to just ignore URIs that are not valid
and cannot be parsed or to implement a function to exclude specific
nodes from the learning-recursion.

*/


import("http://dbtune.org/jamendo/sparql/","SPARQL");

// starting instances including the "broken record" http://dbtune.org/jamendo/record/5359 
sparql.instances = {
"http://dbtune.org/jamendo/record/5359",
"http://dbtune.org/jamendo/record/1145",
"http://dbtune.org/jamendo/record/1668",
"http://dbtune.org/jamendo/record/1769"
};

// if the recursion depth = 1, the error does not occur, but the results
// will also be worthless...
sparql.recursionDepth = 2;

sparql.replacePredicate=[(
"http://www.holygoat.co.uk/owl/redwood/0.1/tags/taggedWithTag",
"http://www.w3.org/1999/02/22-rdf-syntax-ns#type")];

sparql.saveExtractedFragment = true;

// importing a testing owl
import("../data/moosique.owl");

// positive examples = records liked/listened to by user
// we want to learn from positive examples only

problem = posOnlyLP;
+"http://dbtune.org/jamendo/record/5359"
+"http://dbtune.org/jamendo/record/1145"

// we use the new CELOE algorithm
algorithm = celoe;
celoe.maxExecutionTimeInSeconds = 2;
celoe.useHasValueConstructor = true;
celoe.valueFrequencyThreshold = 2;
