<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.dllearner</groupId>
	<artifactId>protege</artifactId>
	<packaging>jar</packaging>

	<name>protege</name>
	<url>http://aksw.org/Projects/DLLearner</url>

	<parent>
		<groupId>org.dllearner</groupId>
		<artifactId>dllearner-parent</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>


	<dependencies>
		<dependency>
			<groupId>org.dllearner</groupId>
			<artifactId>components-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.protege.editor.core</groupId>
			<artifactId>org.protege.editor.core.application</artifactId>
		</dependency>

		<dependency>
			<groupId>org.protege.editor.owl</groupId>
			<artifactId>org.protege.editor.owl</artifactId>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.browserlauncher2</groupId>
			<artifactId>browserlauncher2</artifactId>
		</dependency>

		<dependency>
			<groupId>org.swinglabs</groupId>
			<artifactId>swingx</artifactId>
		</dependency>

		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>looks</artifactId>
		</dependency>
		
		<dependency>
				<groupId>com.jamonapi</groupId>
				<artifactId>jamon</artifactId>
			</dependency>
			
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
			</dependency>
	</dependencies>

	<build>
		<finalName>DL-Learner-Plugin</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile>
					</archive>

				</configuration>
			</plugin>
			<!-- <plugin> <artifactId>maven-dependency-plugin</artifactId> <executions> 
				<execution> <phase>package</phase> <goals> <goal>copy-dependencies</goal> 
				</goals> <configuration> <outputDirectory>${project.build.directory}/lib</outputDirectory> 
				<excludeTransitive>true</excludeTransitive> </configuration> </execution> 
				</executions> </plugin> -->
			<!--<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> 
				<version>2.2</version> <executions> <execution> <id>aggregate</id> <phase>package</phase> 
				<goals> <goal>single</goal> </goals> <configuration> <descriptor>src/main/assembly/default.xml</descriptor> 
				</configuration> </execution> </executions> <configuration> <attach>false</attach> 
				<finalName>lib</finalName> <appendAssemblyId>false</appendAssemblyId> </configuration> 
				</plugin> -->

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-dependency-plugin</artifactId> 
				<executions> <execution> <id>copy</id> <phase>package</phase> <goals> <goal>copy</goal> 
				</goals> <configuration> <artifactItems> <artifactItem> <groupId>junit</groupId> 
				<artifactId>junit</artifactId> <version>3.8.1</version> <type>jar</type> 
				<overWrite>false</overWrite> <outputDirectory>${project.build.directory}/alternateLocation</outputDirectory> 
				<destFileName>optional-new-name.jar</destFileName> </artifactItem> </artifactItems> 
				<outputDirectory>${project.build.directory}/wars</outputDirectory> <overWriteReleases>false</overWriteReleases> 
				<overWriteSnapshots>true</overWriteSnapshots> </configuration> </execution> 
				</executions> </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Uncomment this when the junits are independent of a runtime directory -->
					<!--<includes> -->
					<!--<include>org/dllearner/test/junit/*</include> -->
					<!--</includes> -->
					<excludes>
						<exclude>*</exclude>
						<!--This line excludes inner classes -->
						<exclude>**/*$*</exclude>
					</excludes>
				</configuration>
			</plugin>
	<!-- <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-dependency-plugin</artifactId>
		<version>2.4</version>
		<executions>
			<execution>
				<id>copy</id>
				<phase>prepare-package</phase>
				<goals>
					<goal>copy</goal>
				</goals>
				<configuration>
					<artifactItems>
						<artifactItem>
							<groupId>org.protege.editor.owl</groupId>
							<artifactId>org.protege.editor.owl</artifactId>
							<version>4.2</version>
							<type>jar</type>
							<overWrite>true</overWrite>
							<outputDirectory>${project.build.directory}/classes/lib</outputDirectory>
						</artifactItem>
						<artifactItem>
							<groupId>org.protege.editor.owl</groupId>
							<artifactId>org.protege.editor.owl</artifactId>
							<version>4.2</version>
							<type>jar</type>
							<overWrite>true</overWrite>
							<outputDirectory>${project.build.directory}/classes/lib</outputDirectory>
						</artifactItem>
					</artifactItems>
				</configuration>
			</execution>
		</executions>
	</plugin> -->
	<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/classes/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <excludeTransitive>true</excludeTransitive>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.4,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
