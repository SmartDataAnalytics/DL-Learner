<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="build" name="dl_learner">
	
	<!-- directory settings -->
	<property name="lib_dir" value="lib" />
	<property name="source_dir" value="src/dl-learner" />
	<property name="class_dir" value="classes" />
	<property name="php_client_dir" value="src/php-client" />
	<tstamp>
			<format property="today" pattern="yyyy-MM-dd" locale="en" />		
  	</tstamp>	
	<property name="version_dir" value="dllearner-${today}" />
	<property name="release_tmp_dir" value="release/${version_dir}" />
	<property name="release_php_client_tmp_dir" value="release/php-client-${today}" />	
	
	
	<property name="kaon2" value="${lib_dir}/kaon2.jar"/>
	<property name="xbean" value="${lib_dir}/xbean.jar"/>
	<property name="dig1.1_xmlbeans" value="${lib_dir}/dig1.1-xmlbeans.jar"/>
	<property name="sparql" value="${lib_dir}/modules/sparqlModule.jar"/>
	
	<property name="jena" value="${lib_dir}/jena/jena.jar"/>
		
	<property name="owlapi-api" value="${lib_dir}/owlapi/owlapi-api.jar"/>
	<property name="owlapi-apibinding" value="${lib_dir}/owlapi/owlapi-apibinding.jar"/>
	<property name="owlapi-dig1_1" value="${lib_dir}/owlapi/owlapi-dig1_1.jar"/>
	
	<!-- setup classpath -->
 
	
	<path id="classpath">
		<pathelement location="."/>
	    <fileset dir="${lib_dir}">
	        <include name="**/*.jar"/>
	    	<include name="**/modules/*.jar"/>
	        <include name="**/jena/*.jar"/>
	        <include name="**/owlapi/*.jar"/>
	   </fileset>
	</path>
	
	<!-- build target -->
	<target name="build" depends="createScripts">
		
		<!-- write current build date into Info.java -->
		<echo file="${source_dir}/org/dllearner/Info.java" append="false">
// File is updated automatically when a new version is created
package org.dllearner;

public class Info {
	public static final String build = "${today}";
}
		</echo>		
		
		<!-- compile project into temporary directory -->
		<mkdir dir="classes_tmp"/>		
        <javac destdir="classes_tmp">
            <src path="${source_dir}"/>
            <classpath refid="classpath"/>
        </javac>	
		<mkdir dir="${release_tmp_dir}"/>
		<mkdir dir="${release_tmp_dir}/lib/"/>
        <jar jarfile="${release_tmp_dir}/lib/dllearner.jar">
            <fileset dir="classes_tmp"/>
        </jar> 
		<delete dir="classes_tmp"/>
		
		<!-- copy all other libraries -->
		<copy toDir="${release_tmp_dir}/lib">
			<!-- KAON2 has to be excluded, because it cannot be freely distributed -->			
			<fileset dir="${lib_dir}" excludes="${kaon2}" />
		</copy>	
		
		<!-- copy binary files and examples -->
		<copy toDir="${release_tmp_dir}/examples">
			<fileset dir="examples"/>
		</copy>
		<copy toDir="${release_tmp_dir}">
			<fileset dir="bin"/>
		</copy>
		
		<!-- create file containing the build info -->
		<echo file="${release_tmp_dir}/build.txt" append="false">DL-Leaner Build ${today}</echo>
		
		<!-- create tar.gz files (allows storing whether a file is executable) -->
		<tar longfile="gnu" destfile="dllearner_${today}.tar.gz" compression="gzip">
		  <!-- extra set for executable files -->	
		  <tarfileset dir="release/" mode="755">
		    <include name="${version_dir}/dllearner" />
		  	<include name="${version_dir}/quickstart" />
		  	<include name="${version_dir}/ws" />
		  </tarfileset>
		  <tarfileset dir="release/">
		    <exclude name="${version_dir}/dllearner"/>
		  	<exclude name="${version_dir}/quickstart" />
		  	<exclude name="${version_dir}/ws" />
		  </tarfileset>
		</tar>
		
		<!-- copy source code -->
		<mkdir dir="${release_tmp_dir}/src/"/>
		<copy toDir="${release_tmp_dir}/src/">
			<fileset dir="${source_dir}" includes="**/*.java,**/*.jjt,build.xml"/>
		</copy>
		
		<!-- create backup (= standard build + source code) -->
		<tar longfile="gnu" destfile="backup_dllearner_${today}.tar.gz" compression="gzip">
			<tarfileset dir="release/" mode="755">
			    <include name="${version_dir}/dllearner" />
			  	<include name="${version_dir}/quickstart" />
				<include name="${version_dir}/ws" />
			</tarfileset>
			<tarfileset dir="release/">
			    <exclude name="${version_dir}/dllearner"/>
			  	<exclude name="${version_dir}/quickstart" />
				<exclude name="${version_dir}/ws" />
			</tarfileset>				
		</tar>		
		<delete dir="release"/>		
	</target>
	
	<!-- build PHP client release -->
	<target name="php_client">
		<mkdir dir="${release_php_client_tmp_dir}" />
		
		<!-- copy PHP-client to a temporary directory exluding some files -->
		<copy toDir="${release_php_client_tmp_dir}">
			<fileset dir="${php_client_dir}">
				<exclude name="main.wsdl" />
				<exclude name="*.xsd" />
				<!-- <exclude name="save/" /> -->
			</fileset>
		</copy>
		
		<!-- copy over all owl ontologies in examples directory -->
		<copy toDir="${release_php_client_tmp_dir}/ontologies/" flatten="true">
			<fileset dir="examples" includes="**/*.owl" />
		</copy>
		
		<!-- create release -->
		<tar destfile="php_client_${today}.tar.gz" compression="gzip">
			<tarfileset dir="release" />
		</tar>
		
		<delete dir="release" />
	</target>
	
	<target name="wsgen" >
		<path id="wsgen">
			<path refid="classpath"/>
			<path location="${class_dir}"/>
		</path>
		<pathconvert refid="wsgen" property="wsgenpath"/>
		<exec dir="${source_dir}" executable="wsgen">
	    <arg value="-keep"/>
	    <arg value="-verbose"/>
	  	<arg value="-cp"/>
		<arg value="${wsgenpath}"/>
		<!--<arg value=".;../../classes;../../library/dig1.1-xmlbeans.jar;../../library/kaon2.jar;../../library/xbean.jar;../../library/owlapi/;../../library/owlapi/antlr-runtime-3.0.jar;../../library/owlapi/commons-lang-2.2.jar;../../library/owlapi/owlapi-api.jar;../../library/owlapi/owlapi-apibinding.jar;../../library/owlapi/owlapi-change.jar;../../library/owlapi/owlapi-debugging.jar;../../library/owlapi/owlapi-dig1_1.jar;../../library/owlapi/owlapi-functionalparser.jar;../../library/owlapi/owlapi-functionalrenderer.jar;../../library/owlapi/owlapi-impl.jar;../../library/owlapi/owlapi-krssparser.jar;../../library/owlapi/owlapi-mansyntaxparser.jar;../../library/owlapi/owlapi-mansyntaxrenderer.jar;../../library/owlapi/owlapi-metrics.jar;../../library/owlapi/owlapi-oboparser.jar;../../library/owlapi/owlapi-owlxmlparser.jar;../../library/owlapi/owlapi-owlxmlrenderer.jar;../../library/owlapi/owlapi-rdfapi.jar;../../library/owlapi/owlapi-rdfxmlparser.jar;../../library/owlapi/owlapi-rdfxmlrenderer.jar;../../library/owlapi/owlapi-util.jar"/>-->
	    <arg value="org.dllearner.server.DLLearnerWS"/>  
	  </exec>
	</target>
	

	
	<target name="createScripts" >
		<path id="addjar">
			<path refid="classpath"/>
			<pathelement location="${lib_dir}/dllearner.jar"/>
		</path>
	<path id="removeprefix"><pathelement location="."/>	</path>
	<pathconvert refid="removeprefix" property="removeprefix" />
	
	<pathconvert refid="addjar" property="pathStringUnix" targetos="unix">
		<map from="${removeprefix}" to="."/>
	</pathconvert>
	<pathconvert refid="addjar" property="pathStringWin" targetos="windows">
		<map from="${removeprefix}" to="."/>
	</pathconvert>

	<echo message="${removeprefix}"/>
	<echo message="${pathStringUnix}"/>
	<echo message="${pathStringWin}"/>
		
	<echo file="bin/quickstart.bat" message="java -cp ${pathStringWin} org.dllearner.QuickStart"/>
	<echo file="bin/dllearner.bat" message="java -cp ${pathStringWin} org.dllearner.parser.DLLearner %*"/>
	<echo file="bin/ws.bat" message="java -cp ${pathStringWin} org.dllearner.server.DLLearnerWSStart  %*"/>
	<echo file="bin/quickstart" message="java -cp ${pathStringUnix} org.dllearner.QuickStart"/>
	<echo file="bin/dllearner" message="java -cp ${pathStringUnix} org.dllearner.parser.DLLearner $@"/>
	<echo file="bin/ws" message="java -cp ${pathStringUnix}  org.dllearner.server.DLLearnerWSStart $@"/>
		
	</target>
	
	
	
    <target name="javadoc">
    	<pathconvert refid="classpath" property="jdocclasspath"/>
    	<!--classpath="library/owlapi/antlr-runtime-3.0.jar:library/owlapi/owlapi-rdfxmlparser.jar:library/owlapi/owlapi-owlxmlrenderer.jar:library/owlapi/owlapi-mansyntaxrenderer.jar:library/owlapi/owlapi-metrics.jar:library/owlapi/owlapi-owlxmlparser.jar:library/owlapi/owlapi-change.jar:library/owlapi/owlapi-rdfxmlrenderer.jar:library/owlapi/owlapi-apibinding.jar:library/xbean.jar:library/owlapi/owlapi-oboparser.jar:library/jena/jena.jar:library/owlapi/commons-lang-2.2.jar:library/jena/commons-logging.jar:library/owlapi/owlapi-dig1_1.jar:library/owlapi/owlapi-api.jar:library/owlapi/owlapi-debugging.jar:library/jena/iri.jar:library/kaon2.jar:library/jena/xercesImpl.jar:library/owlapi/owlapi-krssparser.jar:library/jena/antlr-2.7.5.jar:library/owlapi/owlapi-functionalrenderer.jar:library/modules/sparqlModule.jar:library/owlapi/owlapi-mansyntaxparser.jar:library/jena/icu4j_3_4.jar:library/owlapi/owlapi-util.jar:library/dig1.1-xmlbeans.jar:library/jena/concurrent.jar:library/owlapi/owlapi-functionalparser.jar:library/owlapi/owlapi-impl.jar:library/owlapi/owlapi-rdfapi.jar" -->
        <javadoc access="public"
        	author="true" 
        	classpath="${jdocclasspath}"
        	destdir="doc/javadoc" 
        	doctitle="DL-Learner Javadoc" 
        	nodeprecated="false" 
        	nodeprecatedlist="false" 
        	noindex="false" 
        	nonavbar="false" 
        	notree="false" 
        	overview="src/dl-learner/overview.html" 
        	packagenames="org.dllearner.reasoning,org.dllearner.dl,org.dllearner.server,org.dllearner,org.dllearner.server.exceptions,org.dllearner.server.jaxws,org.dllearner.algorithms.gp,org.dllearner.parser,org.dllearner.modules,org.dllearner.algorithms,org.dllearner.examples,org.dllearner.utilities,org.dllearner.algorithms.hybridgp,org.dllearner.algorithms.refinement" 
        	source="1.6" 
        	sourcepath="src/dl-learner" 
        	splitindex="true" 
        	stylesheetfile="/home/jl/promotion/dl-learner-svn/trunk/javadoc.css" 
        	use="true" 
        	version="true"
        	linksource="true" 
        	bottom="&lt;img style='float:right' src='http://sflogo.sourceforge.net/sflogo.php?group_id=203619&amp;type=1' width='88' height='31' border='0' alt='SourceForge.net Logo' /&gt; DL-Learner is licenced under the terms of the GNU General Public License.&lt;br /&gt;Copyright &amp;#169; 2007 Jens Lehmann" 
        	Encoding="ISO-8859-1" 
        	windowtitle="DL-Learner Javadoc">
        	<taglet name="org.dllearner.utilities.ToDoTaglet" path="classes" />
        	<link href="http://java.sun.com/javase/6/docs/api/"/>
    	</javadoc>
    </target>	
	
	
	<!--
	Some old elements which are kept for reference for a couple of days
	
	
	<target name="wsgen_linux" >
	  <exec dir="${source_dir}" executable="wsgen">
	    <arg value="-keep"/>
	    <arg value="-verbose"/> 
	  	<arg value="-cp"/>
	  	<arg value=".:../../classes/:../../library/dig1.1-xmlbeans.jar:../../library/kaon2.jar:../../library/xbean.jar:../../library/owlapi/:../../library/owlapi/antlr-runtime-3.0.jar:../../library/owlapi/commons-lang-2.2.jar:../../library/owlapi/owlapi-api.jar:../../library/owlapi/owlapi-apibinding.jar:../../library/owlapi/owlapi-change.jar:../../library/owlapi/owlapi-debugging.jar:../../library/owlapi/owlapi-dig1_1.jar:../../library/owlapi/owlapi-functionalparser.jar:../../library/owlapi/owlapi-functionalrenderer.jar:../../library/owlapi/owlapi-impl.jar:../../library/owlapi/owlapi-krssparser.jar:../../library/owlapi/owlapi-mansyntaxparser.jar:../../library/owlapi/owlapi-mansyntaxrenderer.jar:../../library/owlapi/owlapi-metrics.jar:../../library/owlapi/owlapi-oboparser.jar:../../library/owlapi/owlapi-owlxmlparser.jar:../../library/owlapi/owlapi-owlxmlrenderer.jar:../../library/owlapi/owlapi-rdfapi.jar:../../library/owlapi/owlapi-rdfxmlparser.jar:../../library/owlapi/owlapi-rdfxmlrenderer.jar:../../library/owlapi/owlapi-util.jar"/>
	    <arg value="org.dllearner.server.DLLearnerWS"/>  
	  </exec>
	</target>
	
	  <path id="classpath">
        <pathelement location="."/>
        <pathelement location="${kaon2}"/>
    	<pathelement location="${xbean}"/>
      	<pathelement location="${dig1.1_xmlbeans}"/>
    	<pathelement location="${jena}"/>
    	<pathelement location="${owlapi-api}"/>
    	<pathelement location="${owlapi-apibinding}"/>
    	<pathelement location="${owlapi-dig1_1}"/>
    </path>
	
	-->
	
	
	
	
</project>
