
// declare some prefixes to use as abbreviations
prefixes = [ ("ex","http://www.benchmark.org/family#") ]

// knowledge source definition
ks.type = "OWL File"
ks.fileName = "family-benchmark.owl"

// reasoner
reasoner.type = "fast instance checker"
reasoner.sources = { ks }

// create learning algorithm to run
alg.type = "celoe"
alg.terminateOnNoiseReached = true

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = { 
"ex:F2M13"
,"ex:F2M18"
,"ex:F2M11"
,"ex:F2M32"
,"ex:F3M44"
,"ex:F3M45"
,"ex:F5M64"
,"ex:F6M71"
,"ex:F6M81"
,"ex:F6M90"
,"ex:F6M100"
,"ex:F6M92"
,"ex:F7M113"
,"ex:F7M117"
,"ex:F7M115"
,"ex:F7M125"
,"ex:F7M123"
,"ex:F7M131"
,"ex:F9M151"
,"ex:F9M153"
,"ex:F9M159"
,"ex:F9M166"
,"ex:F9M162"
,"ex:F9M157"
,"ex:F9M167"
,"ex:F10M173"
,"ex:F10M183"
,"ex:F10M184"
,"ex:F10M188"
,"ex:F10M199"
}

lp.negativeExamples = {
"ex:F10M196"
,"ex:F1M8"
,"ex:F7F103"
,"ex:F3F41"
,"ex:F1M1"
,"ex:F9F164"
,"ex:F9M149"
,"ex:F9M147"
,"ex:F9F158"
,"ex:F2F12"
,"ex:F1F5"
,"ex:F6M88"
,"ex:F7M104"
,"ex:F7M109"
,"ex:F7M120"
,"ex:F6F83"
,"ex:F6M78"
,"ex:F3M47"
,"ex:F10F174"
,"ex:F6F76"
,"ex:F2F26"
,"ex:F6F89"
,"ex:F3M50"
,"ex:F3F42"
,"ex:F6F79"
,"ex:F10M194"
,"ex:F2F19"
,"ex:F2F24"
,"ex:F9F154"
,"ex:F4F58"
}