// declare some prefixes to use as abbreviations
prefixes = [ ("ex","http://www.benchmark.org/family#") ]

// knowledge source definition
ks.type = "OWL File"
ks.fileName = "family-benchmark.owl"

// reasoner
reasoner.type = "fast instance checker"
reasoner.sources = { ks }

// CELOE
/*
alg.type = "celoe"
alg.terminateOnNoiseReached = true
*/

// OCEL
alg.type = "ocel"

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = { 
"ex:F2M18"
,"ex:F2M25"
,"ex:F2M23"
,"ex:F2M32"
,"ex:F2M35"
,"ex:F3M51"
,"ex:F3M47"
,"ex:F5M68"
,"ex:F6M75"
,"ex:F6M99"
,"ex:F7M112"
,"ex:F7M110"
,"ex:F7M113"
,"ex:F7M117"
,"ex:F7M125"
,"ex:F7M123"
,"ex:F7M131"
,"ex:F8M138"
,"ex:F9M147"
,"ex:F9M155"
,"ex:F9M161"
,"ex:F9M166"
,"ex:F10M190"
,"ex:F10M199"
}

lp.negativeExamples = {
"ex:F3M45"
,"ex:F6M85"
,"ex:F10F192"
,"ex:F6F70"
,"ex:F7M115"
,"ex:F10M197"
,"ex:F5F65"
,"ex:F2F17"
,"ex:F9M170"
,"ex:F9M144"
,"ex:F3F53"
,"ex:F2F36"
,"ex:F6M92"
,"ex:F3M43"
,"ex:F8M134"
,"ex:F9F141"
,"ex:F9M142"
,"ex:F9F148"
,"ex:F10M184"
,"ex:F10F198"
,"ex:F3F49"
,"ex:F8M132"
,"ex:F2F30"
,"ex:F10F193"
}