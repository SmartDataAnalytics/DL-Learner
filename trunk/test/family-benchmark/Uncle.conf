// declare some prefixes to use as abbreviations
prefixes = [ ("ex","http://www.benchmark.org/family#") ]

// knowledge source definition
ks.type = "OWL File"
ks.fileName = "family-benchmark.owl"

// reasoner
reasoner.type = "fast instance checker"
reasoner.sources = { ks }

op.type = "rho"
op.useCardinalityRestrictions = false
// op.useAllConstructor = false

// CELOE cofiguration
h.type ="celoe_heuristic"
h.expansionPenaltyFactor = 0.02
alg.type = "celoe"
alg.maxExecutionTimeInSeconds = 200
alg.terminateOnNoiseReached = true

// OCEL configuration
// alg.type = "ocel"

// alg.writeSearchTree = true
// alg.replaceSearchTree = true

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = { "ex:F2M13"
,"ex:F2M11"
,"ex:F2M20"
,"ex:F2M27"
,"ex:F2M32"
,"ex:F2M29"
,"ex:F2M37"
,"ex:F3M44"
,"ex:F5M63"
,"ex:F6M71"
,"ex:F6M80"
,"ex:F6M78"
,"ex:F6M90"
,"ex:F6M85"
,"ex:F6M100"
,"ex:F6M92"
,"ex:F7M113"
,"ex:F7M107"
,"ex:F7M115"
,"ex:F7M120"
,"ex:F7M125"
,"ex:F7M131"
,"ex:F7M122"
,"ex:F9M149"
,"ex:F9M144"
,"ex:F9M151"
,"ex:F9M153"
,"ex:F9M142"
,"ex:F9M159"
,"ex:F9M162"
,"ex:F9M157"
,"ex:F9M167"
,"ex:F10M173"
,"ex:F10M180"
,"ex:F10M182"
,"ex:F10M194"
,"ex:F10M187"
,"ex:F10M196"
}

lp.negativeExamples = {
"ex:F10F198"
,"ex:F7F108"
,"ex:F9M165"
,"ex:F6F82"
,"ex:F9F148"
,"ex:F3M43"
,"ex:F7F103"
,"ex:F10M188"
,"ex:F1F3"
,"ex:F9F156"
,"ex:F9M147"
,"ex:F10F191"
,"ex:F9F160"
,"ex:F6M95"
,"ex:F2F14"
,"ex:F6F94"
,"ex:F1F2"
,"ex:F6F86"
,"ex:F10F174"
,"ex:F2F12"
,"ex:F2F28"
,"ex:F5M60"
,"ex:F8M134"
,"ex:F7M117"
,"ex:F10F189"
,"ex:F4F55"
,"ex:F6F76"
,"ex:F7F119"
,"ex:F2F36"
,"ex:F2M9"
,"ex:F2F38"
,"ex:F2F22"
,"ex:F6F89"
,"ex:F5M64"
,"ex:F5F67"
,"ex:F3F53"
,"ex:F2F26"
,"ex:F5F65"
}