/**
 *
 * solutions:
 *
 */
 //refinement.heuristic=flexible;
 
refinement.useAllConstructor = false;
refinement.useExistsConstructor = false;
refinement.useNegation = false;


// recursion depth of extraction algorithm
sparql2.recursionDepth = 1;


//1=yago
sparql2.predefinedFilter=1;

// use DBpedia endpoint
import("http://dbpedia.openlinksw.com:8890/sparql","SPARQL2");

//***********ROLE SPECIFIC 

/*refinement.ignoredConcepts = {
"http://dbpedia.org/class/yago/Abstraction100002137"
};*/

//sparql2.numberOfInstancesUsedForRoleLearning=5;
//not needed for roles
sparql2.instances = {
"http://dbpedia.org/resource/Kiev"
,"http://dbpedia.org/resource/Helensburgh"
,"http://dbpedia.org/resource/Roman_Dacia"
,"http://dbpedia.org/resource/Jordan"
,"http://dbpedia.org/resource/Oldenburg"
,"http://dbpedia.org/resource/Wayne_Allard"
,"http://dbpedia.org/resource/Aurelian"
,"http://dbpedia.org/resource/W%C5%82adys%C5%82aw_Anders"
,"http://dbpedia.org/resource/Walter_Adams_%28economist%29"
,"http://dbpedia.org/resource/Hank_Azaria"

};

//sparql2.role = "http://dbpedia.org/property/placeOfBirth";
//sparql2.learnDomain=false;
//sparql2.learnRange=true;


/** examples **/
+"http://dbpedia.org/resource/Kiev"
+"http://dbpedia.org/resource/Helensburgh"
+"http://dbpedia.org/resource/Roman_Dacia"
+"http://dbpedia.org/resource/Jordan"
+"http://dbpedia.org/resource/Oldenburg"
-"http://dbpedia.org/resource/Wayne_Allard"
-"http://dbpedia.org/resource/Aurelian"
-"http://dbpedia.org/resource/W%C5%82adys%C5%82aw_Anders"
-"http://dbpedia.org/resource/Walter_Adams_%28economist%29"
-"http://dbpedia.org/resource/Hank_Azaria"