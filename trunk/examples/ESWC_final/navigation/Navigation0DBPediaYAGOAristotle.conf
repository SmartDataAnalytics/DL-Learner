/**
 * Some people from Greece.
 *
solutions:
  http://dbpedia.org/class/yago/Mathematician110301261 (length 1, depth 1)
horizontal expansion: 0 to 1
size of candidate set: 12
properness tests (reasoner/short concept/too weak list): 20/0/0
concept tests (reasoner/too weak list/overly general list/redundant concepts): 20/0/0/0
Algorithm terminated succesfully.
number of instance checks: 82 (31 multiple)
instance check reasoning time: 132ms ( 1ms per instance check)
subsumption hierarchy queries: 11
(complex) subsumption checks: 20 (9 multiple)
subsumption reasoning time: 33ms ( 1ms per subsumption check)
overall reasoning time: 165ms (88,67% of overall runtime)
overall algorithm runtime: 186ms

 */

// SPARQL options
sparql2.recursionDepth = 1;

//predefined filter (1 = YAGO based learning)
// 2 = SKOS, more Options are needed then though. replacePredicate, breakSuperClassRetrievalAfter
sparql2.predefinedFilter = 1;


import("http://dbpedia.openlinksw.com:8890/sparql","SPARQL2");

sparql2.instances = {
  "http://dbpedia.org/resource/Pythagoras",
  "http://dbpedia.org/resource/Philolaus",
  "http://dbpedia.org/resource/Archytas",

  "http://dbpedia.org/resource/Zeno_of_Elea",
  "http://dbpedia.org/resource/Plato",
  "http://dbpedia.org/resource/Socrates"

  
};

+"http://dbpedia.org/resource/Pythagoras"
+"http://dbpedia.org/resource/Philolaus"
+"http://dbpedia.org/resource/Archytas"


-"http://dbpedia.org/resource/Zeno_of_Elea"
-"http://dbpedia.org/resource/Plato"
-"http://dbpedia.org/resource/Socrates"

