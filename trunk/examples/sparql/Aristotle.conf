// reasoner settings
reasoner = dig;
//digReasonerURL = "http://localhost:8081";
//useRetrievalForClassification = false;
//refinement.useDIGMultiInstanceChecks = twoChecks;

// algorithm settings
algorithm = refinement;
//refinement.horizontalExpansionFactor = 0.6;
//refinement.quiet = false;
//refinement.useTooWeakList = true;

// search tree protocol
//refinement.writeSearchTree = false;
//refinement.searchTreeFile = "Aristotle_searchTree.txt";

// control output
cli.checkSatisfiability = true;
cli.showIndividuals = false;
cli.showConcepts = false;
cli.showRoles = true;
cli.showSubsumptionHierarchy = false;



// SPARQL options
sparql2.numberOfRecursions = 2;
sparql2.getAllBackground=true;
sparql2.format = "N-TRIPLES";
sparql2.dumpToFile = true;
sparql2.instances = {
	"http://dbpedia.org/resource/Democritus",
	"http://dbpedia.org/resource/Zeno_of_Elea",
	"http://dbpedia.org/resource/Plato",
	"http://dbpedia.org/resource/Socrates",
	"http://dbpedia.org/resource/Archytas",
	"http://dbpedia.org/resource/Pythagoras",
	"http://dbpedia.org/resource/Philolaus"};

//predefined Endpoint overrides host and it doesn't matter what the string in import below looks like
//  0 means nothing
//  1 means dbpedia
//  2 means localhost:2020 default joseki
sparql2.predefinedEndpoint=1;


//predefined filter overrides predList and ObjList
sparql2.predefinedFilter = 1;
//filtermode 1 and above uses a predefined setting
//  0 means nothing (manual configuration)
//  1 means only yago classes

import("http://dbpedia.openlinksw.com:8890/sparql","SPARQL2");

/** examples **/
+"http://dbpedia.org/resource/Pythagoras"
+"http://dbpedia.org/resource/Philolaus"
+"http://dbpedia.org/resource/Archytas"
-"http://dbpedia.org/resource/Socrates"
-"http://dbpedia.org/resource/Plato"
-"http://dbpedia.org/resource/Zeno_of_Elea"
-"http://dbpedia.org/resource/Democritus" 