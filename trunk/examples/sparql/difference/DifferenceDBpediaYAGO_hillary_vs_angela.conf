/**
Note: DBpedia is always subject to change, solutions will change over time

 * Solutions:
http://dbpedia.org/class/yago/Achiever109762821 (length 1, depth 1)
  http://dbpedia.org/class/yago/Intellectual109621545 (length 1, depth 1)
 */
 
 // SPARQL options
sparql.type = "SPARQL endpoint fragment"
sparql.url = "http://dbpedia.openlinksw.com:8890/sparql"
sparql.defaultGraphURIs = {"http://dbpedia.org"}
sparql.recursionDepth = 1
//TODOREFACTOR check if predefinedFilter works at all
sparql.predefinedFilter = "YAGO"
// the set of objects as starting point for fragment selection
// (should be identical to the set of examples)
sparql.instances = {
  "http://dbpedia.org/resource/Angela_Merkel",
  "http://dbpedia.org/resource/Hillary_Rodham_Clinton"
}

reasoner.type = "fast instance checker"
reasoner.sources = {sparql}

lp.type = "posNegStandard"
lp.positiveExamples = {"http://dbpedia.org/resource/Hillary_Rodham_Clinton"} 
lp.negativeExamples = {"http://dbpedia.org/resource/Angela_Merkel" }
lp.reasoner = reasoner

// we use the OCEL algorithm
alg.type = "ocel"
alg.reasoner = reasoner
