/**
 * Simple example for using a SPARQL Endpoint as background
 * knowledge.
 *
 * solutions:
 *   http://dbpedia.org/class/yago/Adult109605289
 *   http://dbpedia.org/class/yago/Female109619168
 *   http://dbpedia.org/class/yago/Scientist110560637
 */

// recursion depth of extraction algorithm
sparql2.recursionDepth = 2;

// list of ignored roles
sparql2.predList = {
  "http://www.w3.org/2004/02/skos/core",
  "http://www.w3.org/2002/07/owl#sameAs",
  "http://xmlns.com/foaf/0.1/",
  "http://dbpedia.org/property/reference",
  "http://dbpedia.org/property/website",
  "http://dbpedia.org/property/wikipage"
};

// list of ignored objects
sparql2.objList = {
  "http://dbpedia.org/resource/Category:Wikipedia_",
  "http://dbpedia.org/resource/Category:Articles_",
  "http://xmlns.com/foaf/0.1/",
  "http://upload.wikimedia.org/wikipedia/commons",
  "http://upload.wikimedia.org/wikipedia",
  "http://www.geonames.org",
  "http://www.w3.org/2006/03/wn/wn20/instances/synset",
  "http://www4.wiwiss.fu-berlin.de/flickrwrappr",
  "http://www.w3.org/2004/02/skos/core"
};

// use DBpedia endpoint
import("http://dbpedia.openlinksw.com:8890/sparql","SPARQL2");

// the set of objects as starting point for fragment selection
// (should be identical to the set of examples)
sparql2.instances = {
  "http://dbpedia.org/resource/Angela_Merkel",
  "http://dbpedia.org/resource/Gerhard_Schr%C3%B6der"
};

/** examples **/
+"http://dbpedia.org/resource/Angela_Merkel"
-"http://dbpedia.org/resource/Gerhard_Schr%C3%B6der"
