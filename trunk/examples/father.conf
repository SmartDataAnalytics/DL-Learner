/**
 * Father Example
 *
 * possible solution: 
 *   male AND EXISTS hasChild.TOP
 *
 * Copyright (C) 2007, Jens Lehmann
 */

/** settings **/
// reasoner settings
reasoner = dig;
//digReasonerURL = "http://localhost:8081";
//useRetrievalForClassification = true;
//refinement.useDIGMultiInstanceChecks = twoChecks;

// algorithm settings
algorithm = refinement;

// problem = posOnlyDefinition;

// search tree protocol
refinement.writeSearchTree = false;
refinement.searchTreeFile = "log/searchFather.txt";

// control output
cli.checkSatisfiability = true;
cli.showIndividuals = false;
cli.showConcepts = false;
cli.showRoles = true;
cli.showSubsumptionHierarchy = false;

import("father.kb");
// import("father_incl.kb");

/** examples **/
+stefan
+markus
+bernd
-heinz
-anna
-gabi
-michelle
