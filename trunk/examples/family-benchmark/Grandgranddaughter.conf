// declare some prefixes to use as abbreviations
prefixes = [ ("ex","http://www.benchmark.org/family#") ]

// knowledge source definition
ks.type = "OWL File"
ks.fileName = "family-benchmark.owl"

// reasoner
reasoner.type = "fast instance checker"
reasoner.sources = { ks }

// CELOE
/*
alg.type = "celoe"
alg.terminateOnNoiseReached = true
*/

// OCEL
alg.type = "ocel"

// ELTL
// alg.type = "eltl"

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = { 
"ex:F2F17"
,"ex:F2F33"
,"ex:F3F49"
,"ex:F3F52"
,"ex:F6F83"
,"ex:F6F89"
,"ex:F6F96"
,"ex:F6F97"
,"ex:F7F108"
,"ex:F7F118"
,"ex:F7F129"
,"ex:F7F127"
,"ex:F9F145"
,"ex:F9F148"
,"ex:F9F150"
,"ex:F9F164"
,"ex:F10F201"
}

lp.negativeExamples = {
"ex:F2F28"
,"ex:F3F41"
,"ex:F6F70"
,"ex:F10F179"
,"ex:F3M50"
,"ex:F6F74"
,"ex:F7F114"
,"ex:F8M138"
,"ex:F6M88"
,"ex:F10M194"
,"ex:F5M60"
,"ex:F2F19"
,"ex:F1F3"
,"ex:F8F137"
,"ex:F9M142"
,"ex:F3M47"
,"ex:F2F10"
}