// declare some prefixes to use as abbreviations
prefixes = [ ("ex","http://www.benchmark.org/family#") ]

// knowledge source definition
ks.type = "OWL File"
ks.fileName = "family-benchmark.owl"

// reasoner
reasoner.type = "fast instance checker"
reasoner.sources = { ks }

// CELOE
/*
alg.type = "celoe"
alg.terminateOnNoiseReached = true
*/

// OCEL
alg.type = "ocel"

// ELTL
// alg.type = "eltl"

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = { 
"ex:F2F19"
,"ex:F2F28"
,"ex:F2F10"
,"ex:F3F46"
,"ex:F3F42"
,"ex:F3F41"
,"ex:F5F61"
,"ex:F6F93"
,"ex:F6F70"
,"ex:F7F106"
,"ex:F7F121"
,"ex:F7F105"
,"ex:F7F103"
,"ex:F8F133"
,"ex:F9F141"
,"ex:F9F140"
,"ex:F10F172"
}

lp.negativeExamples = {
"ex:F10M196"
,"ex:F9M149"
,"ex:F6M73"
,"ex:F7M102"
,"ex:F10F191"
,"ex:F2F24"
,"ex:F8M138"
,"ex:F2F33"
,"ex:F2M39"
,"ex:F6F77"
,"ex:F1M4"
,"ex:F10F198"
,"ex:F9F156"
,"ex:F10F174"
,"ex:F5M66"
,"ex:F10M176"
,"ex:F2F22"
}