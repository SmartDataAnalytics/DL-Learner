// declare some prefixes to use as abbreviations
prefixes = [ ("ex","http://www.benchmark.org/family#") ]

// knowledge source definition
ks.type = "OWL File"
ks.fileName = "family-benchmark.owl"

// reasoner
reasoner.type = "fast instance checker"
reasoner.sources = { ks }

// CELOE
/*
alg.type = "celoe"
alg.terminateOnNoiseReached = true
*/

// OCEL
alg.type = "ocel"

// ELTL
// alg.type = "eltl"

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = { 
"ex:F2M13"
,"ex:F2M18"
,"ex:F2M25"
,"ex:F2M23"
,"ex:F2M21"
,"ex:F2M32"
,"ex:F2M35"
,"ex:F3M44"
,"ex:F3M51"
,"ex:F3M47"
,"ex:F3M45"
,"ex:F5M68"
,"ex:F5M66"
,"ex:F6M75"
,"ex:F6M73"
,"ex:F6M81"
,"ex:F6M90"
,"ex:F6M99"
,"ex:F6M100"
,"ex:F7M112"
,"ex:F7M110"
,"ex:F7M113"
,"ex:F7M117"
,"ex:F7M115"
,"ex:F7M125"
,"ex:F7M123"
,"ex:F7M131"
,"ex:F8M138"
,"ex:F8M136"
,"ex:F9M147"
,"ex:F9M151"
,"ex:F9M155"
,"ex:F9M153"
,"ex:F9M161"
,"ex:F9M159"
,"ex:F9M166"
,"ex:F9M162"
,"ex:F10M183"
,"ex:F10M184"
,"ex:F10M190"
,"ex:F10M188"
,"ex:F10M199"
,"ex:F10M197"
}

lp.negativeExamples = {
"ex:F6F83"
,"ex:F4M57"
,"ex:F1M8"
,"ex:F9F140"
,"ex:F4F58"
,"ex:F2M29"
,"ex:F9M170"
,"ex:F7F118"
,"ex:F2F19"
,"ex:F2M16"
,"ex:F2M34"
,"ex:F10M182"
,"ex:F7M120"
,"ex:F8M134"
,"ex:F6F74"
,"ex:F10F192"
,"ex:F6F86"
,"ex:F2F28"
,"ex:F9M139"
,"ex:F10M194"
,"ex:F1F5"
,"ex:F4F56"
,"ex:F6F89"
,"ex:F2F33"
,"ex:F10F174"
,"ex:F7M128"
,"ex:F7F129"
,"ex:F9F158"
,"ex:F3M50"
,"ex:F6F94"
,"ex:F7F114"
,"ex:F6F72"
,"ex:F7F124"
,"ex:F9F150"
,"ex:F4F55"
,"ex:F10F175"
,"ex:F1F7"
,"ex:F4M54"
,"ex:F7F108"
,"ex:F6M92"
,"ex:F9F152"
,"ex:F6M85"
,"ex:F2F36"
}