// declare some prefixes to use as abbreviations
prefixes = [ ("ex","http://www.benchmark.org/family#") ]

// knowledge source definition
ks.type = "OWL File"
ks.fileName = "family-benchmark.owl"

// reasoner
reasoner.type = "fast instance checker"
reasoner.sources = { ks }

// CELOE
/*
alg.type = "celoe"
alg.terminateOnNoiseReached = true
*/

// OCEL
alg.type = "ocel"

// ELTL
// alg.type = "eltl"

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = { 
"ex:F2M20"
,"ex:F2M29"
,"ex:F2M9"
,"ex:F3M45"
,"ex:F3M43"
,"ex:F3M40"
,"ex:F5M60"
,"ex:F6M92"
,"ex:F6M69"
,"ex:F7M107"
,"ex:F7M122"
,"ex:F7M104"
,"ex:F7M102"
,"ex:F8M132"
,"ex:F9M142"
,"ex:F9M139"
,"ex:F10M171"
}

lp.negativeExamples = {
"ex:F10M190"
,"ex:F9F169"
,"ex:F9F168"
,"ex:F7F106"
,"ex:F7M128"
,"ex:F7F129"
,"ex:F7F105"
,"ex:F10M182"
,"ex:F2F17"
,"ex:F2M34"
,"ex:F7M120"
,"ex:F6M81"
,"ex:F6F101"
,"ex:F8M134"
,"ex:F7M109"
,"ex:F3F53"
,"ex:F10M173"
}