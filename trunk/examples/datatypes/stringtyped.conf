/**
 * Simple test example for string datatypes 
 * solution 
 * typedLiteral hasValue "test"
 */
prefixes = [ ("kb","http://my.example.com/string#") ]
 
// knowledge source definition 
ks.type = "OWL File"
ks.fileName = "string.owl" 

// reasoner
reasoner.type = "fast instance checker"
reasoner.sources = { ks }

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = {
"kb:tl1",
"kb:tl2",
"kb:tl3",
"kb:tl4",
"kb:tl5"
}
lp.negativeExamples = {
"kb:nothing1",
"kb:nothing2"
}
lp.reasoner = reasoner

op.type = "rho"
op.reasoner = reasoner
op.useDataHasValueConstructor=true
op.useStringDatatypes = true

alg.type = "ocel"
alg.reasoner = reasoner
alg.operator = op
alg.searchTreeFile = "log/stringTypedTree.txt"
// alg.writeSearchTree = true

