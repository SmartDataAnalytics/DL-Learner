// reasoner settings
reasoner = dig;
//digReasonerURL = "http://localhost:8081";
//useRetrievalForClassification = false;
//refinement.useDIGMultiInstanceChecks = twoChecks;

// algorithm settings
algorithm = refinement;
//refinement.horizontalExpansionFactor = 0.6;
//refinement.quiet = false;
//refinement.useTooWeakList = true;

// search tree protocol
//refinement.writeSearchTree = false;
//refinement.searchTreeFile = "Aristotle_searchTree.txt";

// control output
cli.checkSatisfiability = true;
cli.showIndividuals = false;
cli.showConcepts = false;
cli.showRoles = true;
cli.showSubsumptionHierarchy = false;

/*sparqlModule.sparqlPredicateFilterList={"http://www.w3.org/2004/02/skos/core",
			"http://xmlns.com/foaf/0.1/",	
			"http://dbpedia.org/property/wikipage-",
			"http://www.w3.org/2002/07/owl#sameAs",
			"http://dbpedia.org/property/reference"};
sparqlModule.sparqlObjectFilterList={"http://dbpedia.org/resource/Category:Articles_",
			"http://dbpedia.org/resource/Category:Wikipedia_",
			"http://xmlns.com/foaf/0.1/",
			"http://dbpedia.org/resource/Category",
			"http://dbpedia.org/resource/Template",
			"http://upload.wikimedia.org/wikipedia/commons"};*/
//sparqlModule.classList={};
//sparqlModule.useLiterals = false;

// SPARQL options
sparql.numberOfRecursions = 2;
sparql.instances = {"http://dbpedia.org/resource/Democritus","http://dbpedia.org/resource/Zeno_of_Elea","http://dbpedia.org/resource/Plato","http://dbpedia.org/resource/Socrates","http://dbpedia.org/resource/Archytas","http://dbpedia.org/resource/Pythagoras","http://dbpedia.org/resource/Philolaus"};
sparql.filterMode = 0;
sparql.predList = {};
sparql.objList = {};
sparql.classList = {};

import("http://dbpedia.openlinksw.com","SPARQL");

/** examples **/
+"http://dbpedia.org/resource/Pythagoras"
+"http://dbpedia.org/resource/Philolaus"
+"http://dbpedia.org/resource/Archytas"
-"http://dbpedia.org/resource/Socrates"
-"http://dbpedia.org/resource/Plato"
-"http://dbpedia.org/resource/Zeno_of_Elea"
-"http://dbpedia.org/resource/Democritus" 