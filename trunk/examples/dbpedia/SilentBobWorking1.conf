runPreprocessingModule("org.dllearner.modules.sparql.SparqlModule");

// reasoner settings
reasoner = dig;
digReasonerURL = "http://localhost:8081";
useRetrievalForClassification = false;
refinement.useDIGMultiInstanceChecks = twoChecks;

// algorithm settings
algorithm = refinement;
refinement.horizontalExpansionFactor = 0.6;
refinement.quiet = false;
refinement.useTooWeakList = true;

// search tree protocol
refinement.writeSearchTree = false;
refinement.searchTreeFile = "Aristotle_searchTree.txt";

// control output
showIndividuals = true;
showConcepts = true;
showRoles = true;
showInternalKB = true;
showSubsumptionHierarchy = true;

hidePrefix="http://dbpedia.org/resource/";


refinement.useAllConstructor = false;
refinement.useExistsConstructor = true;
refinement.useNegation = false;

sparqlModule.numberOfRecursion = 3;
sparqlModule.filterMode  = 0;

// http://dbpedia.org/class/yago/agnostic OR http://dbpedia.org/class/yago/artist
// http://dbpedia.org/class/yago/agnostic OR http://dbpedia.org/class/yago/teetotaler

+test("http://dbpedia.org/resource/Matt_Stone").
+test("http://dbpedia.org/resource/Sarah_Silverman").
-test("http://dbpedia.org/resource/Jim_Carrey").
-test("http://dbpedia.org/resource/Jason_Mewes").
-test("http://dbpedia.org/resource/Kevin_Smith").
-test("http://dbpedia.org/resource/Trey_Parker").
-test("http://dbpedia.org/resource/Adam_Sandler").





