/** settings **/
// reasoner settings
reasoner = dig;
//digReasonerURL = "http://localhost:8081";
//useRetrievalForClassification = true;
//refinement.useDIGMultiInstanceChecks = twoChecks;

// algorithm settings
algorithm = refinement;
horizontalExpansionFactor = 0.5;
//refinement.quiet = false;

// search tree protocol
// refinement.writeSearchTree = false;
// refinement.searchTreeFile = "log/searchTree.txt";

// control output
cli.checkSatisfiability = true;
cli.showIndividuals = false;
cli.showConcepts = false;
cli.showRoles = true;
cli.showSubsumptionHierarchy = false;

// SPARQL options
sparql.numberOfRecursions = 2;
sparql.instances = {"http://dbpedia.org/resource/Matt_Stone","http://dbpedia.org/resource/Sarah_Silverman","http://dbpedia.org/resource/Jim_Carrey","http://dbpedia.org/resource/Jason_Mewes","http://dbpedia.org/resource/Kevin_Smith","http://dbpedia.org/resource/Trey_Parker","http://dbpedia.org/resource/Adam_Sandler"};
sparql.filterMode = 2;
sparql.predList = {};
sparql.objList = {};
sparql.classList = {};

import("http://dbpedia.openlinksw.com","SPARQL");

// http://dbpedia.org/class/yago/agnostic OR http://dbpedia.org/class/yago/artist
// http://dbpedia.org/class/yago/agnostic OR http://dbpedia.org/class/yago/teetotaler

+"http://dbpedia.org/resource/Matt_Stone"
+"http://dbpedia.org/resource/Sarah_Silverman"
-"http://dbpedia.org/resource/Jim_Carrey"
-"http://dbpedia.org/resource/Jason_Mewes"
-"http://dbpedia.org/resource/Kevin_Smith"
-"http://dbpedia.org/resource/Trey_Parker"
-"http://dbpedia.org/resource/Adam_Sandler"