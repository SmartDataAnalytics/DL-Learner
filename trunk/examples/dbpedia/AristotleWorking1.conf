
loadJarFile("lib/modules/sparqlModule.jar");
runPreprocessingModule("org.dllearner.modules.SparqlModule");

// reasoner settings
reasoner = dig;
digReasonerURL = "http://localhost:8081";
useRetrievalForClassification = false;
refinement.useDIGMultiInstanceChecks = twoChecks;

// algorithm settings
algorithm = refinement;
refinement.horizontalExpansionFactor = 0.6;
refinement.quiet = false;
refinement.useTooWeakList = true;

// search tree protocol
refinement.writeSearchTree = false;
refinement.searchTreeFile = "Aristotle_searchTree.txt";

// control output
showIndividuals = true;
showConcepts = true;
showRoles = true;
showInternalKB = true;
showSubsumptionHierarchy = true;

hidePrefix="http://dbpedia.org/resource/";
//

refinement.useAllConstructor = false;
refinement.useExistsConstructor = true;
refinement.useNegation = false;

sparqlModule.numberOfRecursion = 2;
/**
1 flach nicht zu empfehlen
2 Klassen f�r objects und properties of objects
3 Klassen f�r properties of objects und superklassen von klassen
**/
sparqlModule.filterMode = 0;


/*sparqlModule.sparqlPredicateFilterList={"http://www.w3.org/2004/02/skos/core",
			"http://xmlns.com/foaf/0.1/",	
			"http://dbpedia.org/property/wikipage-",
			"http://www.w3.org/2002/07/owl#sameAs",
			"http://dbpedia.org/property/reference"};
sparqlModule.sparqlObjectFilterList={"http://dbpedia.org/resource/Category:Articles_",
			"http://dbpedia.org/resource/Category:Wikipedia_",
			"http://xmlns.com/foaf/0.1/",
			"http://dbpedia.org/resource/Category",
			"http://dbpedia.org/resource/Template",
			"http://upload.wikimedia.org/wikipedia/commons"};*/
//sparqlModule.classList={};
//sparqlModule.useLiterals = false;




//mathematiker
+test("http://dbpedia.org/resource/Pythagoras").
//well you know
+test("http://dbpedia.org/resource/Philolaus").
//was a Greek Pythagorean and Presocratic.
+test("http://dbpedia.org/resource/Archytas").
//was an Ancient Greek philosopher, mathematician, astronomer, statesman, and strategist.


//Philosophen 
-test("http://dbpedia.org/resource/Socrates").
-test("http://dbpedia.org/resource/Plato").

-test("http://dbpedia.org/resource/Zeno_of_Elea").
//was a pre-Socratic Greek philosopher
-test("http://dbpedia.org/resource/Democritus").
//was a pre-Socratic Greek philosopher 





