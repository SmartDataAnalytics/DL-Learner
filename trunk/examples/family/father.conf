/**
 * Father Example
 *
 * possible solution: 
 *   male AND EXISTS hasChild.TOP
 *
 * Copyright (C) 2007, Jens Lehmann
 */

// knowledge source definition
ks.type = "KB file"
ks.url = "father.kb"
// ks.baseDir = "examples/family"; //Assuming running from parent directory of examples.

// reasoner
reasoner.type = "fast instance checker"
reasoner.reasonerComponent = component:embeddedReasoner
reasoner.sources = {"component:ks"}

embeddedReasoner.type = "org.dllearner.reasoning.OWLAPIReasoner"
embeddedReasoner.sources = {"component:ks"}

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = {"http://localhost/foo#stefan","http://localhost/foo#markus","http://localhost/foo#bernd"}
lp.negativeExamples = {"http://localhost/foo#heinz","http://localhost/foo#anna","http://localhost/foo#gabi","http://localhost/foo#michelle"}

// plug a reasoner into the learning problem
lp.reasoner = component:reasoner
//lp.reasoner = reasoner - try to remove the component:part in the parser

// create a refinement operator and configure it
op.type = "rho"
op.useCardinalityRestrictions = true
op.reasoner = component:reasoner

// create a heuristic and configure it
h.type = "multiheuristic"
h.expansionPenaltyFactor = 0.2

// create learning algorithm to run
alg.type = "ocel"
alg.reasoner = component:reasoner
alg.operator = component:op
alg.learningProblem = component:lp
alg.heuristic = component:h
alg.maxExecutionTimeInSeconds=15

