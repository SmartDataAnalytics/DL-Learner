/**
 * Another Father Example (this time using OWL import)
 *
 * possible solution:
 *   male AND EXISTS hasChild.TOP
 *
 * Copyright (C) 2007, Jens Lehmann
 */
// declare some prefixes to use as abbreviations
prefixes = [ ("kb","http://localhost/foo#") ]

// knowledge source definition
ks.type = "KB File"
ks.url = "father.kb"
// ks.baseDir = "examples/family"; //Assuming running from parent directory of examples.

// reasoner
reasoner.type = "fast instance checker"
reasoner.reasonerComponent = embeddedReasoner

embeddedReasoner.type = "OWL API Reasoner"
embeddedReasoner.sources = { ks }

// learning problem
lp.type = "posonlylp"
lp.positiveExamples = {"kb:markus","kb:stefan","kb:bernd"}

// plug a reasoner into the learning problem
lp.reasoner = reasoner
//lp.reasoner = reasoner - try to remove the component:part in the parser

// create learning algorithm to run
alg.type = "celoe"
alg.reasoner = reasoner
alg.maxExecutionTimeInSeconds = 10
