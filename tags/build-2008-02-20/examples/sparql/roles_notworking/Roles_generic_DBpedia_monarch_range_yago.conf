/**
 *
 * solutions:
 *
 */
 //refinement.heuristic=flexible;
 
refinement.useAllConstructor = false;
refinement.useExistsConstructor = false;
refinement.useNegation = false;


// recursion depth of extraction algorithm
sparql2.recursionDepth = 1;


//1=yago
sparql2.predefinedFilter=1;

// use DBpedia endpoint
import("http://dbpedia.openlinksw.com:8890/sparql","SPARQL2");

//***********ROLE SPECIFIC 

/*refinement.ignoredConcepts = {
"http://dbpedia.org/class/yago/Ruler110541229",
"http://dbpedia.org/class/yago/Sovereign110628644"
};
*/

sparql2.numberOfInstancesUsedForRoleLearning=5;
//not needed for roles
sparql2.instances = {""};

sparql2.role = "http://dbpedia.org/property/monarch";
sparql2.learnDomain=false;
sparql2.learnRange=true;


/** examples **/
+"http://dbpedia.org/resource/Oscar_I_of_Sweden"
+"http://dbpedia.org/resource/George_VI_of_the_United_Kingdom"
+"http://dbpedia.org/resource/Edward_VII_of_the_United_Kingdom"
+"http://dbpedia.org/resource/Victoria_of_the_United_Kingdom"
+"http://dbpedia.org/resource/Abdullah_II_of_Jordan"
-"http://dbpedia.org/resource/Khawaja_Nazimuddin"
-"http://dbpedia.org/resource/Harold_Macmillan"
-"http://dbpedia.org/resource/Maati_Bouabid"
-"http://dbpedia.org/resource/Charles_Watson-Wentworth%2C_2nd_Marquess_of_Rockingham"
-"http://dbpedia.org/resource/Helen_Clark"